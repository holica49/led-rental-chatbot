{
  "name": "led-rental-mcp",
  "version": "0.1.0",
  "description": "A Model Context Protocol server for LED rental automation",
  "type": "module",
  "bin": {
    "led-rental-mcp": "./dist/index.js"
  },
  "main": "./dist/index.js",
  "files": [
    "dist",
    "mcp.json"
  ],
  "scripts": {
    "start": "tsx src/index.ts",
    "build": "tsc",
    "dev": "nodemon --exec tsx src/index.ts --watch src",
    "typecheck": "tsc --noEmit",
    "test": "NODE_OPTIONS='--experimental-vm-modules' jest",
    "test:watch": "NODE_OPTIONS='--experimental-vm-modules' jest --watch",
    "test:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest --coverage",
    "prepare": "npm run build",
    "railway-start": "tsx src/index.ts",
    "railway-build": "npm run build",
    "find-users": "tsx src/tools/notionUserFinder.js",
    "test:unit": "jest tests/unit",
    "test:integration": "jest tests/integration",
    "test:verbose": "jest --verbose",
    "session:save": "node scripts/save-session.js",
    "session:new": "node scripts/new-session.js"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "claude",
    "ai-assistant",
    "led-rental",
    "automation"
  ],
  "author": "허지성",
  "license": "오리온디스플레이",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.6.0",
    "@notionhq/client": "^2.2.14",
    "body-parser": "^1.20.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "exceljs": "^4.4.0",
    "express": "^4.21.1",
    "node-cron": "^3.0.3",
    "prettier": "^3.1.0",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@jest/globals": "^30.0.5",
    "@types/body-parser": "^1.19.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.16.11",
    "@types/node-cron": "^3.0.11",
    "@types/supertest": "^6.0.3",
    "jest": "^30.0.5",
    "nodemon": "^3.0.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.0",
    "tsx": "^4.7.0",
    "typescript": "^5.6.3"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1"
    }
  }
}
